node {
   def gitcommit
   stage('Verificación SCM') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"
     gitcommit = readFile('.git/commit-id').trim()
   }
   
   stage('Test') {
     def contenedortest = docker.image('node:4.6')
     contenedortest.pull()
     contenedortest.inside {
       sh 'npm install --only=dev'
       sh 'npm test'
     }
   }
   
   stage('Docker Build & Push') {
     docker.withRegistry('https://registry.hub.docker.com', 'da78c0c3-dd24-4a43-a114-7bb847308e6d') {
       def nuestraapp = docker.build("yasselreyes8x/nodejsapp:${gitcommit}", ".")
       nuestraapp.push()
     }
   }

   stage('Docker Run') {
     // Intentar detener y eliminar cualquier contenedor anterior
     try {
       sh """
       if [ \$(docker ps -q -f name=nodejsapp-) ]; then
         docker stop \$(docker ps -q -f name=nodejsapp-)
         docker rm \$(docker ps -a -q -f name=nodejsapp-)
       fi
       """
     } catch (Exception e) {
       echo "No se encontró ningún contenedor en ejecución o fallo al eliminar."
     }
     
     // Ejecutar el nuevo contenedor
     try {
       sh """
       docker run -d -p 3000:3000 --name nodejsapp-${gitcommit} yasselreyes8x/nodejsapp:${gitcommit}
       """
     } catch (Exception e) {
       // En caso de fallo, mostrar error y eliminar el contenedor fallido
       sh """
       docker rm -f nodejsapp-${gitcommit}
       """
       error "Fallo al iniciar el contenedor. Revertiendo cambios."
     }
   }
}
