node {
   def gitcommit
   def versionTag = 'PROD102' // Tag para el contenedor

   stage('Verificación SCM') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"
     gitcommit = readFile('.git/commit-id').trim()
   }

   stage('Test') {
     def contenedortest = docker.image('node:4.6')
     contenedortest.pull()
     contenedortest.inside {
       sh 'npm install --only=dev'
       sh 'npm test'
     }
   }

   stage('Docker Build & Push') {
     docker.withRegistry('https://registry.hub.docker.com', 'da78c0c3-dd24-4a43-a114-7bb847308e6d') {
       def nuestraapp = docker.build("yasselreyes8x/nodejsapp:${versionTag}", ".")
       nuestraapp.push()
     }
   }

   stage('Despliegue Local en Jenkins') {
     sh """
     # Detener y eliminar el contenedor si ya existe
     if [ \$(docker ps -q -f name=nodejsapp-${versionTag}) ]; then
       docker stop nodejsapp-${versionTag}
       docker rm nodejsapp-${versionTag}
     elif [ \$(docker ps -a -q -f name=nodejsapp-${versionTag}) ]; then
       docker rm nodejsapp-${versionTag}
     fi
     
     # Ejecutar nuevo contenedor
     docker pull yasselreyes8x/nodejsapp:${versionTag}
     docker run -d -p 3000:3000 --name nodejsapp-${versionTag} yasselreyes8x/nodejsapp:${versionTag}
     """
   }

   stage('Despliegue en Servidor Remoto (con cambio a root)') {
     sh """
     # Instalar sshpass si no está disponible
     if ! command -v sshpass &> /dev/null; then
       apt-get update && apt-get install -y sshpass
     fi

     # Detener y eliminar el contenedor en el servidor remoto si ya existe
     sshpass -p 'TIC..2k22' ssh -o StrictHostKeyChecking=no ma@192.168.50.44 '
       echo "Cambiando a usuario root"
       echo "TIC..2k22" | sudo -S su -

       if [ \$(docker ps -q -f name=nodejsapp-${versionTag}) ]; then
         docker stop nodejsapp-${versionTag}
         docker rm nodejsapp-${versionTag}
       elif [ \$(docker ps -a -q -f name=nodejsapp-${versionTag}) ]; then
         docker rm nodejsapp-${versionTag}
       fi
       
       # Ejecutar nuevo contenedor en el servidor remoto
       docker pull yasselreyes8x/nodejsapp:${versionTag}
       docker run -d -p 3000:3000 --name nodejsapp-${versionTag} yasselreyes8x/nodejsapp:${versionTag}
     '
     """
   }
}
